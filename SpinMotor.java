// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5247.TestDrive.subsystems;

import org.usfirst.frc5247.TestDrive.RobotMap;
import org.usfirst.frc5247.TestDrive.commands.DriveCommand;
//import org.usfirst.frc5247.TestDrive.commands.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.PWMTalonSRX;
//import org.usfirst.frc5247.TestDrive.commands.SpinCommand;
import org.usfirst.frc5247.TestDrive.commands.SpinRight;
import org.usfirst.frc5247.TestDrive.commands.SpinStop;
import org.usfirst.frc5247.TestDrive.commands.SpinRightFaster;
import org.usfirst.frc5247.TestDrive.commands.SpinCommandFaster;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class SpinMotor extends Subsystem {

 
    //private static Victor leftMotor =  new Victor(RobotMap.SPIN_MOTOR);
    
        	
        	//public DifferentialDrive robotDrivet;
        	//public DifferentialDrive robotDrivet;
        	
    public SpinMotor() {
    	
  
    	
    }
    
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new SpinCommand());
         setDefaultCommand(new SpinRight());
         setDefaultCommand(new SpinRightFaster());
         setDefaultCommand(new SpinCommandFaster());
         setDefaultCommand(new SpinStop());

    }

    @Override
	public void periodic() {
        // Put code here to be run every loop

    }

	public  void spin(double moveValue) {
        //leftMotor.set(moveValue);
        //rightMotor.set(moveValue);
	}

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

